{"ast":null,"code":"var _jsxFileName = \"/Users/calvincarter/Desktop/sb/mentees/mike_fierro/deployment/client/src/SaveHeart.js\",\n    _s = $RefreshSig$();\n\n// This component is the save button, or the heart icon, on the ListingCard and Listing components.\n// Tried to make this as flexible as possible for both use-cases, so there's an option to have the text 'Save'\n// next to it, which we use in the Listing component.  This also changes to 'Saved' when the empty heart is clicked,\n// then goes back to 'Save' when the full heart is clicked.  We also have to pass in a valid Bootstrap color for the\n// heart.\nimport React, { useState } from 'react';\nimport './SaveHeart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SaveHeart = ({\n  saveText,\n  color\n}) => {\n  _s();\n\n  const [isEmptyHeartClicked, setIsEmptyHeartClicked] = useState(false);\n  const [isFullHeartClicked, setIsFullHeartClicked] = useState(true);\n\n  const heartClick = () => {\n    setIsEmptyHeartClicked(!isEmptyHeartClicked);\n    setIsFullHeartClicked(!isFullHeartClicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SaveHeart\",\n      onClick: heartClick,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `far fa-heart ${isEmptyHeartClicked ? 'd-none' : ''} text-${color}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SaveHeart\",\n      onClick: heartClick,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fas fa-heart ${isFullHeartClicked ? 'd-none' : ''} text-${color}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: saveText ? `SaveHeart-text text-${color}` : 'd-none',\n      children: `Save${isEmptyHeartClicked ? 'd' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SaveHeart, \"I9dbDBkSYlrYIVJSXiT3e/x3p1Y=\");\n\n_c = SaveHeart;\nexport default SaveHeart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveHeart\");","map":{"version":3,"sources":["/Users/calvincarter/Desktop/sb/mentees/mike_fierro/deployment/client/src/SaveHeart.js"],"names":["React","useState","SaveHeart","saveText","color","isEmptyHeartClicked","setIsEmptyHeartClicked","isFullHeartClicked","setIsFullHeartClicked","heartClick"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAAA;;AACzC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,IAAD,CAA5D;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvBH,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACAG,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEE,UAAvC;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,gBAAeJ,mBAAmB,GAAG,QAAH,GAAc,EAAG,SAAQD,KAAM;AAD/E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEK,UAAvC;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,gBAAeF,kBAAkB,GAAG,QAAH,GAAc,EAAG,SAAQH,KAAM;AAD9E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAM,MAAA,SAAS,EAAED,QAAQ,GAAI,uBAAsBC,KAAM,EAAhC,GAAoC,QAA7D;AAAA,gBAAyE,OAAMC,mBAAmB,GAAG,GAAH,GAAS,EAAG;AAA9G;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD,CAxBD;;GAAMH,S;;KAAAA,S;AA0BN,eAAeA,SAAf","sourcesContent":["// This component is the save button, or the heart icon, on the ListingCard and Listing components.\n// Tried to make this as flexible as possible for both use-cases, so there's an option to have the text 'Save'\n// next to it, which we use in the Listing component.  This also changes to 'Saved' when the empty heart is clicked,\n// then goes back to 'Save' when the full heart is clicked.  We also have to pass in a valid Bootstrap color for the\n// heart.\nimport React, { useState } from 'react';\nimport './SaveHeart.css';\n\nconst SaveHeart = ({ saveText, color }) => {\n  const [isEmptyHeartClicked, setIsEmptyHeartClicked] = useState(false);\n  const [isFullHeartClicked, setIsFullHeartClicked] = useState(true);\n\n  const heartClick = () => {\n    setIsEmptyHeartClicked(!isEmptyHeartClicked);\n    setIsFullHeartClicked(!isFullHeartClicked);\n  }\n\n  return (\n    <>\n      <button className=\"SaveHeart\" onClick={heartClick}>\n        <i \n          className={`far fa-heart ${isEmptyHeartClicked ? 'd-none' : ''} text-${color}`} \n        ></i>\n      </button>\n      <button className=\"SaveHeart\" onClick={heartClick}>\n        <i \n          className={`fas fa-heart ${isFullHeartClicked ? 'd-none' : ''} text-${color}`}\n        ></i>\n      </button>\n      <span className={saveText ? `SaveHeart-text text-${color}` : 'd-none'}>{`Save${isEmptyHeartClicked ? 'd' : ''}`}</span>\n    </>\n  );\n}\n\nexport default SaveHeart;"]},"metadata":{},"sourceType":"module"}