{"ast":null,"code":"var _jsxFileName = \"/Users/calvincarter/Desktop/sb/mentees/mike_fierro/deployment/client/src/ViewLocationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { isoToLocale } from './helpers';\nimport './ViewLocationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewLocationForm = ({\n  location\n}) => {\n  _s();\n\n  // Two-liner to get today's local (Los Angeles) date in string form\n  // This line gives us today's date in m/d/yyyy format\n  const todayLocal = new Date().toLocaleDateString(); // This line turns that back into a UTC format, turns it into a string, splits it where the date ends and the time begins,\n  // and returns the date in string form in the correct yyyy-mm-dd format\n\n  const todayLocalCorrectFormat = new Date(todayLocal).toISOString().split('T')[0]; // I did this, because most likely, no one outside of the US is going to see this website, so it'd be better if this project\n  // centered around LA time, that way, at most, it will only be 3 hours behind or ahead of a user.\n\n  const INITIAL_STATE = {\n    date: \"\",\n    name: \"\",\n    email: \"\"\n  };\n  const [formData, setFormData] = useState(INITIAL_STATE);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(fData => ({ ...fData,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setIsSubmitted(true);\n  };\n\n  if (isSubmitted) {\n    // turns out, it's a real pain to keep the actual value of the form date and display it in plain English.  You can use\n    // the Date object's toLocaleDateString to turn the form Date to plain English format, but then it changes the date to \n    // the day before (at some points during the day), because it's using the local date and time.  To prevent that, we can\n    // use the isoToLocale function below, taken straight from a stackoverflow article - \n    // https://stackoverflow.com/questions/55427168/is-there-a-function-to-get-the-utc-date-in-the-locale-string-format\n    const dateOptions = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const prettyDate = isoToLocale(new Date(formData.date), undefined, dateOptions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewLocationForm-submitted-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Viewing \", location.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"with \", location.agent.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"on \", prettyDate, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [location.agent.name, \" will email you to settle on a specific time.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ViewLocationForm text-start\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: \"form-label\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Pick a date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            className: \"form-control\",\n            min: todayLocalCorrectFormat,\n            onChange: handleChange,\n            value: formData.date,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            className: \"form-control\",\n            onChange: handleChange,\n            value: formData.name,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            className: \"form-control\",\n            onChange: handleChange,\n            value: formData.email,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"View Location!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ViewLocationForm, \"/yCcZ02tAI4wXukn9pDGwvaoviY=\");\n\n_c = ViewLocationForm;\nexport default ViewLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewLocationForm\");","map":{"version":3,"sources":["/Users/calvincarter/Desktop/sb/mentees/mike_fierro/deployment/client/src/ViewLocationForm.js"],"names":["React","useState","isoToLocale","ViewLocationForm","location","todayLocal","Date","toLocaleDateString","todayLocalCorrectFormat","toISOString","split","INITIAL_STATE","date","name","email","formData","setFormData","isSubmitted","setIsSubmitted","handleChange","evt","value","target","fData","handleSubmit","preventDefault","dateOptions","weekday","year","month","day","prettyDate","undefined","agent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { isoToLocale } from './helpers';\nimport './ViewLocationForm.css';\n\nconst ViewLocationForm = ({ location }) => {\n  // Two-liner to get today's local (Los Angeles) date in string form\n  // This line gives us today's date in m/d/yyyy format\n  const todayLocal = new Date().toLocaleDateString();\n  // This line turns that back into a UTC format, turns it into a string, splits it where the date ends and the time begins,\n  // and returns the date in string form in the correct yyyy-mm-dd format\n  const todayLocalCorrectFormat = new Date(todayLocal).toISOString().split('T')[0];\n  // I did this, because most likely, no one outside of the US is going to see this website, so it'd be better if this project\n  // centered around LA time, that way, at most, it will only be 3 hours behind or ahead of a user.\n  const INITIAL_STATE = {\n    date: \"\",\n    name: \"\",\n    email: \"\"\n  };\n\n  const [formData, setFormData] = useState(INITIAL_STATE);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setFormData(fData => ({ ...fData, [name]: value }));\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setIsSubmitted(true);\n  }\n  \n  if (isSubmitted) {\n    // turns out, it's a real pain to keep the actual value of the form date and display it in plain English.  You can use\n    // the Date object's toLocaleDateString to turn the form Date to plain English format, but then it changes the date to \n    // the day before (at some points during the day), because it's using the local date and time.  To prevent that, we can\n    // use the isoToLocale function below, taken straight from a stackoverflow article - \n    // https://stackoverflow.com/questions/55427168/is-there-a-function-to-get-the-utc-date-in-the-locale-string-format\n    const dateOptions = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    const prettyDate = isoToLocale(new Date(formData.date), undefined, dateOptions);\n\n    return (\n      <div className=\"ViewLocationForm-submitted-container\">\n        <div>\n          <p><b>Viewing {location.name}</b></p> \n          <p><b>with {location.agent.name}</b></p>\n          <p><b>on {prettyDate}!</b></p>\n          <p><b>{location.agent.name} will email you to settle on a specific time.</b></p>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"row justify-content-center\">\n        <form className=\"ViewLocationForm text-start\" onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"date\" className=\"form-label\"><b>Pick a date</b></label>\n            <input \n              type=\"date\" \n              id=\"date\" \n              name=\"date\" \n              className=\"form-control\" \n              min={todayLocalCorrectFormat}\n              onChange={handleChange}\n              value={formData.date} \n              required \n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label\"><b>Name</b></label>\n            <input \n              type=\"text\" \n              id=\"name\" \n              name=\"name\" \n              className=\"form-control\"\n              onChange={handleChange}\n              value={formData.name}\n              required \n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\"><b>Email</b></label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              name=\"email\" \n              className=\"form-control\"\n              onChange={handleChange}\n              value={formData.email} \n              required />\n          </div>\n          <button className=\"btn btn-primary\">View Location!</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ViewLocationForm;"]},"metadata":{},"sourceType":"module"}