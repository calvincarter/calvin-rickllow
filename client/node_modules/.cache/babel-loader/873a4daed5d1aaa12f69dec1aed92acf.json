{"ast":null,"code":"// This function allows us to insert commas into the right places in Numbers >= 1,000 with the help of regexs\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n} // This function allows us to convert a UTC/ISO date to a Locale-specific format (for us in the U.S., it's the full weekday\n// in English, followed by the full month in English, then the day as a number, then the year as a number) without \n// changing the value of the actual date.  The Date object allows us to convert a UTC date to a locale-specific format with the\n// toLocaleDateString method, but it sometimes changes the date to the day before, because it uses the locale's timezone.  \n// This function prevents that.  Taken straight from a stackoverflow article -     \n// https://stackoverflow.com/questions/55427168/is-there-a-function-to-get-the-utc-date-in-the-locale-string-format\n\n\nfunction isoToLocale(date, locale, options) {\n  const timeDiff = date.getTimezoneOffset() * 60000;\n  const adjustedDate = new Date(date.valueOf() + timeDiff);\n  return adjustedDate.toLocaleDateString(locale, options);\n}\n\nexport { numberWithCommas, isoToLocale };","map":{"version":3,"sources":["/Users/calvincarter/Desktop/sb/mentees/mike_fierro/deployment/client/src/helpers.js"],"names":["numberWithCommas","x","toString","replace","isoToLocale","date","locale","options","timeDiff","getTimezoneOffset","adjustedDate","Date","valueOf","toLocaleDateString"],"mappings":"AAAA;AACA,SAASA,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B,SAAOA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAC1C,QAAMC,QAAQ,GAAGH,IAAI,CAACI,iBAAL,KAA2B,KAA5C;AACA,QAAMC,YAAY,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACO,OAAL,KAAiBJ,QAA1B,CAArB;AACA,SAAOE,YAAY,CAACG,kBAAb,CAAgCP,MAAhC,EAAwCC,OAAxC,CAAP;AACD;;AAED,SAASP,gBAAT,EAA2BI,WAA3B","sourcesContent":["// This function allows us to insert commas into the right places in Numbers >= 1,000 with the help of regexs\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n// This function allows us to convert a UTC/ISO date to a Locale-specific format (for us in the U.S., it's the full weekday\n// in English, followed by the full month in English, then the day as a number, then the year as a number) without \n// changing the value of the actual date.  The Date object allows us to convert a UTC date to a locale-specific format with the\n// toLocaleDateString method, but it sometimes changes the date to the day before, because it uses the locale's timezone.  \n// This function prevents that.  Taken straight from a stackoverflow article -     \n// https://stackoverflow.com/questions/55427168/is-there-a-function-to-get-the-utc-date-in-the-locale-string-format\nfunction isoToLocale(date, locale, options) {\n  const timeDiff = date.getTimezoneOffset() * 60000;\n  const adjustedDate = new Date(date.valueOf() + timeDiff);\n  return adjustedDate.toLocaleDateString(locale, options);\n}\n\nexport { numberWithCommas, isoToLocale };"]},"metadata":{},"sourceType":"module"}